import java.util.Scanner;

public class Main_13 {
    public static void main(String[] args) {

// *********************************
// Java: Формирование строк в циклах
// *********************************

// Еще одно использование циклов — формирование строк.
// Подобная задача нередко встречается в программировании. Она сводится к обычной агрегации через конкатенацию.
//
//Есть одна задача, которая популярна на собеседованиях — это переворот строки.
// Ее можно решить множеством разных способов, но именно посимвольный перебор считается базовым:
//
//App.reverse("Hexlet"); // "telxeH"
//Общая идея переворота состоит в следующем — нужно брать символы по очереди
// с начала строки и соединять их в обратном порядке. Давайте проверим, как это работает:
//
//public static String reverse(String str) {
//    var i = 0;
//    // Нейтральный элемент для строк — это пустая строка
//    var result = "";
//    while (i < str.length()) {
//        // Соединяем в обратном порядке
//        result = str.charAt(i) + result;
//        i += 1;
//    }
//
//    return result;
//}
//
//var name = "Bran";
//App.reverse(name); // "narB"
//// Проверка нейтрального элемента
//App.reverse(""); // ""

// Важно прочувствовать, как собирается сама строка — каждый следующий символ прикрепляется
// к результирующей строке слева, и в итоге строка оказывается перевернута.

        Scanner in = new Scanner(System.in);
        System.out.print("Введите любое слово: ");
        String str = in.nextLine();
        System.out.println(revers(str));

        in.close();

    }

// Задание 1.
//Реализуйте такой же метод reverse(), но выполняющий обход строки не с первого элемента по последний,
// а наоборот, от последнего к первому. Общая структура функции при этом останется такой же.
// Изменится начальный индекс, условие окончания цикла, сборка новой строки и формирование нового индекса в цикле.
// public static String reverse(String str) {
//    var i = 0;
//    // Нейтральный элемент для строк — это пустая строка
//    var result = "";
//    while (i < str.length()) {
//        // Соединяем в обратном порядке
//        result = str.charAt(i) + result;
//        i += 1;
//    }
//
//    return result;
//}

    public static String revers(String str) {
        int i = str.length() - 1;
        String result = "";

        while (i >= 0) {
            result += str.charAt(i);
            i--;
        }
        return result;
    }

}
