package src;// üìå –î–∞–Ω –º–∞—Å—Å–∏–≤ nums = [3,2,2,3] –∏ —á–∏—Å–ª–æ val = 3.
//üìå –ï—Å–ª–∏ –≤ –º–∞—Å—Å–∏–≤–µ –µ—Å—Ç—å —á–∏—Å–ª–∞, —Ä–∞–≤–Ω—ã–µ –∑–∞–¥–∞–Ω–Ω–æ–º—É, –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–Ω–µ—Å—Ç–∏
//—ç—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –∫–æ–Ω–µ—Ü –º–∞—Å—Å–∏–≤–∞.
//üìå –¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, –ø–µ—Ä–≤—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ (–∏–ª–∏ –≤—Å–µ) —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞
//–¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –æ—Ç–ª–∏—á–Ω—ã –æ—Ç –∑–∞–¥–∞–Ω–Ω–æ–≥–æ, –∞ –æ—Å—Ç–∞–ª—å–Ω—ã–µ - —Ä–∞–≤–Ω—ã –µ–º—É.

import java.lang.reflect.Array;
import java.util.Arrays;

public class Task_5 {
    public static void main(String[] args) {
        int val = 8;
        int[] nums = {3, 2, 2, 3, 5, 3, 7, 8, 0, 8, 8, 1, 3, 4, 3};
        int leftIndex = 0;
        int rightIndex = nums.length - 1;

        while (leftIndex < rightIndex) {
            while (nums[rightIndex] == val && leftIndex < rightIndex) {
                rightIndex--;
            }
            if (nums[leftIndex] == val) {
                nums[leftIndex] = nums[rightIndex];
                nums[rightIndex] = val;
            }
            leftIndex++;
        }
        System.out.println(Arrays.toString(nums));
    }
}
