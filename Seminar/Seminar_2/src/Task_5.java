/* –ó–∞–¥–∞—á–∞.
üìå –ù–∞–ø–∏—à–∏—Ç–µ –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –≤–µ—Ä–Ω–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ç–µ–∫—É—â–µ–π –ø–∞–ø–∫–∏ –≤ –≤–∏–¥–µ
–º–∞—Å—Å–∏–≤–∞ —Å—Ç—Ä–æ–∫.
üìå –ù–∞–ø–∏—à–∏—Ç–µ –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –∑–∞–ø–∏—à–µ—Ç –º–∞—Å—Å–∏–≤, –≤–æ–∑–≤—Ä–∞—â–µ–Ω–Ω—ã–π –ø—Ä–µ–¥—ã–¥—É—â–∏–º
–º–µ—Ç–æ–¥–æ–º –≤ —Ñ–∞–π–ª.
üìå –û–±—Ä–∞–±–æ—Ç–∞–π—Ç–µ –æ—à–∏–±–∫–∏ —Å –ø–æ–º–æ—â—å—é try-catch –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏. –í —Å–ª—É—á–∞–µ
–≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏—è –∏—Å–∫–ª—é—á–µ–Ω–∏—è, –æ–Ω–æ –¥–æ–ª–∂–Ω–æ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –≤ –ª–æ–≥-—Ñ–∞–π–ª.
 */

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.FileHandler;
import java.util.logging.Logger;
import java.util.logging.SimpleFormatter;

public class Task_5 {
    private static Logger logger = Logger.getLogger(Task_5.class.getName());
    public static void main(String[] args) {
        configLogger();
        String[] contentFolder = getFileList(System.getProperty("user.dir"));
//        writeArrayToFile(contentFolder, "contentFolder.txt");   // –≤ –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ –ø—Ä–æ–≥—Ä–∞–º–º–∞ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ –æ—à–∏–±–æ–∫
        writeArrayToFile(contentFolder, ".");   // –≤ –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–¥–∞—Ç—å –æ—à–∏–±–∫—É –∏ –ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏—Ç—å –∑–∞–ø–∏—Å—å –≤ log.txt —Ñ–∞–π–ª
    }

    public static String[] getFileList(String folderName) {
        File currentFolder = new File(folderName);
        return currentFolder.list();
    }

    public static void configLogger() {     // —Å–æ–∑–¥–∞–Ω–∏–µ log.—Ñ–∞–π–ª–∞
        try {
            logger.setUseParentHandlers(false);     // –¥–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –ø–æ–∑–≤–æ–ª—è–µ—Ç –Ω–µ –≤—ã–≤–æ–¥–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª. –î–∞–ª—å–Ω–µ–π—à–∏–π –∫–æ–¥ –∑–∞–ø–∏—à–µ—Ç –¥–∞–Ω–Ω—ã–µ —Ç–æ–ª—å–∫–æ –≤ —Å–æ–∑–¥–∞–Ω–Ω—ã–π —Ñ–∞–π–ª (–≤ –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ log.txt)
            FileHandler fh = new FileHandler("log.txt", true);      // –∫–æ–º–∞–Ω–¥–∞ append:true - –ø–æ–∑–≤–æ–ª—è–µ—Ç –¥–æ–∑–∞–ø–∏—Å—ã–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–∞–π–ª
            logger.addHandler(fh);
            SimpleFormatter sf = new SimpleFormatter();
            fh.setFormatter(sf);
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }

    public static void writeArrayToFile(String[] arr, String fileName) {
        try (FileWriter fr = new FileWriter(fileName, true)) {    // –ø–∞—Ä–∞–º–µ—Ç—Ä append:true - –ø–æ–∑–≤–æ–ª—è–µ—Ç –¥–æ–∑–∞–ø–∏—Å—ã–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–∞–π–ª
            for (String elem : arr) {

                fr.write(elem);
                fr.write(System.lineSeparator());   // System.lineSeparator() - –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç –ø–µ—Ä–µ–≤–æ–¥ –Ω–∞ –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É –¥–ª—è –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å–∏
            }
            logger.info("–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω—ã.");
        } catch (IOException ex) {
            System.out.println(ex.getMessage());
            logger.warning("–û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –≤ —Ñ–∞–π–ª.");
        }
    }

}
