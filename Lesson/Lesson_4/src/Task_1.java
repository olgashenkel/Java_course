// LinkedList
// **************************

// Представляет собой двусвязный список.
//Список – гибкая структура данных, позволяющая легко менять свой
//размер. Элементы доступны для вставки или удаления в любой позиции.
// Обобщенный класс LinkedList<E> представляет структуру данных в виде связанного списка.
// Он наследуется от класса AbstractSequentialList и реализует интерфейсы List, Dequeue и Queue.
// То есть он соединяет функциональность работы со списком и фукциональность очереди.
//Класс LinkedList имеет следующие конструкторы:
//•	LinkedList(): создает пустой список
//•	LinkedList(Collection<? extends E> col): создает список, в который добавляет все элементы коллекции col
//LinkedList содержит все те методы, которые определены в интерфейсах List, Queue, Deque. Некоторые из них:
//•	addFirst() / offerFirst(): добавляет элемент в начало списка
//•	addLast() / offerLast(): добавляет элемент в конец списка
//•	removeFirst() / pollFirst(): удаляет первый элемент из начала списка
//•	removeLast() / pollLast(): удаляет последний элемент из конца списка
//•	getFirst() / peekFirst(): получает первый элемент
//•	getLast() / peekLast(): получает последний элемент


// Мотивация.
//LinkedList нужен для небольшого количества
//элементов, в которых операции добавления\удаления
//встречаются чаще операций чтения.



public class Task_1 {
    public static void main(String[] args) {

    }
}